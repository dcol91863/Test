
In order to modify the script to store the list of partitions that are older than 35 years into an input.txt file, you can simply redirect the output to a file rather than printing it to the console.

Here is the updated script:

#!/bin/bash

# The current date, 35 years ago, converted to a Unix timestamp
threshold_date=$(date -d"35 years ago" +%s)

# The Hive table to check
database_name="your_database_name"
table_name="your_table_name"

# The column that contains the date
date_column="your_date_column"

# The file to store the output
output_file="input.txt"

# Execute the Hive query
hive -S -e "use $database_name; show partitions $table_name;" | while read -r line
do
    # Extract the date from the line and convert it to a Unix timestamp
    partition_date=$(echo $line | awk -F'=' '{print $2}')
    partition_timestamp=$(date -d"$partition_date" +%s)

    # If the partition date is older than the threshold, store it in the file
    if [ $partition_timestamp -lt $threshold_date ]
    then
        echo "Partition $line in table $table_name is older than 35 years" >> $output_file
    fi
done



This script appends the output to input.txt. If you want to overwrite the file each time the script runs, replace >> $output_file with > $output_file.
